#self
snippet .
	self.
# New Function
snippet fun 
	function [${1:returns}]=${2:fname}(${3:args})
		%IN 
		${4}	
	end

snippet met 
	function [${1:returns}]=${2:fname}(self,${3:args})
		${4}	
	end

snippet get
	function var=get.${1:prop}(self)
		var=self.$1;
	end	

snippet set
	function self=set.${1:prop}(self,val)
		self.$1=val;
	end	

snippet atr
	self.${1:prop}=$1;

snippet for
	for ${1:i}=${2:iter}
		${3}
	end

snippet if 
	if ${1:condition} 
		${4}
	end
	
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	end
	
snippet cl 
	classdef ${1:`substitute(Filename(), '^.', '\u&', '')`}
		properties

		end
		methods
			function self=$1(${2:args})
				${3}
			end
		end
	end
snippet tsuite
	classdef `substitute(Filename(), '^.', '\u&', '')` < TestCase
		properties

		end
		methods
			function self=`substitute(Filename(), '^.', '\u&', '')`(name)
				self=self@TestCase(name);	
			end
			
			function setUp(self)
				${1}
			end

			function tearDown(self)

			end
		end
	end
snippet tcase
	function ${1}Test(self)
		${2}
		assertEqual();
	end
snippet deb
	Logger.debug('${1}');
